Assignments: If you've started early there's space to ponder. When you run into a roadblock you have time to take a step back from it, relax, and then approach it again a few days later 
Assignments: Read the course documentation (syllabus). If assignment 1 is worth 10% of a 10 credit module and assignment 2 is worth 40% of a 20 credit module, don't spend all your time on number 1 
Assignments: Start early. Start early. Start early. Start early. The earlier you start, the earlier you will understand exactly how hard the assignment is
Assignments: When solving a problem it can be really easy to get stuck on step 8 or 9 or such of your solution. - take a step back, maybe your entire approach needs a rethink
Exams: For each question try to come up with a plan. You can use the back of the exam book to take notes and to sketch out an answer, or just take a blank page then cross it out.
Exams: If a section is worth 12 marks and asks for 4 different examples, each example is probably worth 3 marks.
Exams: Read the questions before starting. Read the whole paper. Think about how you are going to answer it. 
Exams: There's no need to try and save paper. Don't squeeze things in - spread it out so it's easy to read.
Exams: Work out how long you have in the exam and stick to a plan, e.g. 3 questions worth 33 marks each, in 2 hours? That's 10 mins prep, 35 mins*3 for the questions, 5 mins readthrough
Jobs: A lot of the things you do at uni are directly related to work. Presentations, report writing, groupwork - these can all seem like pointless extras but they're actually to do with jobs.
Jobs: Grades are important but so is experience. Relevant work experience in particular can realy help. This is why we push internships so hard
"Jobs: Keep a ""base"" CV which has all the facts in it and is kept up to date. This makes tailoring it for a new application easy"
Jobs: Make sure you have your CV proof read every time you submit it somewhere
Jobs: Think about your online profile. Uni is about having fun as well as study, but if your fun spills over into social media be aware that employers might find it.
Jobs: Try to get an internship, a summer placement or an industrial year - it'll be great for your long term employability, your tech skills, your confidence, and your CV
Lectures: Going to lectures when you are tired or hungover is unpleasant, but probably better than not going at all.
Lectures: If you find yourself drifting off, try having a bit of a stretch
Lectures: If you find yourself getting distracted by social media, try turning off the wifi in your laptop
Lectures: If you have a question, ask. Most lecturers are happy to take questions as they go, some prefer to take questions at the end
Lectures: If you have a question, ask. There are likely to be other people also wanting to ask the same question.
Lectures: If you have two lectures back to back in the same room, get up and walk around between them
Lectures: Other students can be distracting. If you sit nearer the front they're less likely to catch your eye
Lectures: Paying attention for 50 minutes is hard. Notes help keep you on track
"Lectures: Put your phone on ""do not disturb"", or even better, turn it off"
Lectures: Taking notes on a laptop is still worth doing if you can't do notes on paper
Lectures: Taking notes on paper is better for your memory than taking notes on a laptop https://www.scientificamerican.com/article/a-learning-secret-don-t-take-notes-with-a-laptop/
Lectures: Think about your colleagues - crisps are distracting, so is opening a can of pop
"Mindset: Don't think to yourself ""I can't do X""; instead think ""I can't do X yet"""
Mindset: If something is hard, try to solve it on your own, then ask a friend, then ask a member of staff
Mindset: If there's a class you're finding particularly easy, make sure you're not being over-confident; do the exercises and help your colleagues
Mindset: If you have a lot of time consider learning a new programming language or volunteering for something (e.g. robot club, codefirstgirls, nightline, St John's ...)
Mindset: Never give up on a problem, read around it, ask for help and persevere. It might take time, but it'll be worth it!
Mindset: Not everyone knows a lot about computers before they come to uni - try not to make someone feel like an idiot because they've asked a 'stupid' question.
Mindset: Particularly in the first year where people are getting up to speed, you might find things easy. Don't use this time to feel superior, use this time to help out your classmates.
Mindset: Some things that at first look simple can be tricky and some things that look tricky can be simple. This is one of the reasons it's good to start assignments early.
Mindset: Sometimes you'll be demotivated - that doesn't mean you aren't cut out for the degree and it doesn't mean you're worse than anyone else. Try taking some time away from the screen.
Mindset: The whole point of coming to university is to learn how to do things you couldn't do when you started
Mindset: University is not just about learning a subject. It's also about learning how to solve new problems and find things out for yourself 
Mindset: You are in a place full of clever, motivated people, make the most of them by engaging with them and talking to them.
Mindset: You're part of a class and some will find topics easy whilst some find topics hard. You might find programming hard but writing easy or vice versa - try to find someone to study-swap
Programming: Comments can be a gift to your future self, and to others who read your code, but only if they're sensible and stay up to date
Programming: Don't be afraid to put an early version aside and start again from scratch. You've learned stuff by trying, it's not wasted time. Save the old version and begin anew.
Programming: One strategy for solving coding problems is to explain the problem to someone else - or to an inanimate object, like a rubber duck
Programming: One strategy for solving coding problems is to walk away from the computer and try to work it out on paper. 
Programming: One strategy for solving coding problems is to work out step by step what the program is doing and what changes happen with each line of code
Programming: Practice really helps. If you're finding coding hard to learn, get a book and work through some exercises or look for some online coding puzzles
Programming: Spend some time learning version control (for example, git) as it will make it easier to both back up your work and backtrack to previous working versions 
Programming: Variable, function, method and class names should be readable and make sense. 
Study: If you're stuck on something ask! If asking in a lecture is too scary, find out the lecturer's office hours, ask on Blackboard, or drop them an email. 
Study: It can help to study in a particular place. This could be a corner of the library, a computer lab or a common room. 
Study: Some of what you find on the Internet is wrong. Some of what you find in books is wrong. Critical thinking is key.
Study: Think about what you want from a study zone. Books? Coffee? WiFi? Background noise? Silence? 
Study: Wikipedia is a great place to start your research but a bad place to finish it. At uni you need to look to the original sources and the references. Luckily, Wikipedia should link to these.
Study: working with a group studying the same things can really help. 
Study: write a quiz for yourself on each lecture. This will help you work out which bits are important, and give you a quiz to revise from
Tutorials: Try not to hide at the back - everyone is learning, and mistakes are fine
Tutorials: You might have to give a presentation in a tutorial. Remember, everyone is scared, and practice can really help.
Tutorials: You'll get out what you put in, so try to contribute as much as possible. 
Uni life: Clubs and societies are great for getting out and getting to try new things. They can even help with getting a job, as you can take on roles for a society which give you skills and responsibility
Uni life: Don't be afraid to approach other students, or even staff, about doing projects outside of your academic requirements.
Uni life: If you have an idea or want to try something new, then try and organise a group and get it going
Uni life: If you're struggling talk to someone. If the uni knows you're struggling they can start to try and help.
Uni life: It's not all about study. Be sure to get some downtime, and some fresh air
Uni life: You can study abroad, taking a year of your studies in a partner university in another country. This needs planning though so if you are interested find out about this in your first year.
Uni Systems: If you've got module choices and you're not sure which to do, try doing both options for a week or so. You can always change modules in the first few weeks of term and sitting in on stuff is perfectly OK
Uni Systems: Lecturers will have office hours or an open door policy - find out which and don't feel bad about popping up to ask questions. We like questions.
Uni Systems: There will be an official syllabus or module description for each course (linked from Blackboard, probably). This says what happens when and how many marks various elements can earn.
Uni Systems: There will be talks during freshers week (and at other times) by people like the library and the computer service. These can be really useful
Uni Systems: Work out what to do if you're ill and miss some lectures; you might need to get a doctor's note
